ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"clock.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.system_init,"ax",%progbits
  18              		.align	1
  19              		.global	system_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	system_init:
  26              	.LFB0:
  27              		.file 1 "Src/clock.c"
   1:Src/clock.c   **** #include "project.h"
   2:Src/clock.c   **** 
   3:Src/clock.c   **** 
   4:Src/clock.c   **** 
   5:Src/clock.c   **** // cau hinh max speed rcc
   6:Src/clock.c   **** void system_init(u32_t div_m, u32_t mul_n, u32_t div_p, u32_t system_source,u32_t div_ahb , u32_t d
  28              		.loc 1 6 0
  29              		.cfi_startproc
  30              		@ args = 12, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 30B4     		push	{r4, r5}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 5, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
   7:Src/clock.c   **** 	
   8:Src/clock.c   ****   volatile u32_t temp_reg;
   9:Src/clock.c   ****   volatile u32_t timeout;
  10:Src/clock.c   ****   
  11:Src/clock.c   ****   		//enable FPU
  12:Src/clock.c   **** 	temp_reg = read_reg(FPU_CPACR, ~0u);
  42              		.loc 1 12 0
  43 0004 6D4D     		ldr	r5, .L11
  44 0006 2C68     		ldr	r4, [r5]
  45 0008 0194     		str	r4, [sp, #4]
  13:Src/clock.c   **** 	temp_reg |= (0xF <<20);
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 2


  46              		.loc 1 13 0
  47 000a 019C     		ldr	r4, [sp, #4]
  48 000c 44F47004 		orr	r4, r4, #15728640
  49 0010 0194     		str	r4, [sp, #4]
  14:Src/clock.c   **** 	write_reg(FPU_CPACR , temp_reg) ; 
  50              		.loc 1 14 0
  51 0012 019C     		ldr	r4, [sp, #4]
  52 0014 2C60     		str	r4, [r5]
  53              	.LVL1:
  15:Src/clock.c   ****   
  16:Src/clock.c   ****  
  17:Src/clock.c   ****   /* Disable all interrupts */
  18:Src/clock.c   ****    write_reg(RCC_CIR, 0x00000000U);
  54              		.loc 1 18 0
  55 0016 6A4C     		ldr	r4, .L11+4
  56 0018 0025     		movs	r5, #0
  57 001a 2560     		str	r5, [r4]
  19:Src/clock.c   **** 
  20:Src/clock.c   **** 
  21:Src/clock.c   ****    // __HAL_RCC_SYSCFG_CLK_ENABLE();
  22:Src/clock.c   ****    write_reg(RCC_APB2ENR , (1u <<14 ));
  58              		.loc 1 22 0
  59 001c 3834     		adds	r4, r4, #56
  60 001e 4FF48045 		mov	r5, #16384
  61 0022 2560     		str	r5, [r4]
  23:Src/clock.c   ****    
  24:Src/clock.c   ****    //  __HAL_RCC_PWR_CLK_ENABLE();  	
  25:Src/clock.c   ****    write_reg(RCC_APB1ENR , (1u <<28 ));
  62              		.loc 1 25 0
  63 0024 043C     		subs	r4, r4, #4
  64 0026 4FF08055 		mov	r5, #268435456
  65 002a 2560     		str	r5, [r4]
  26:Src/clock.c   ****    
  27:Src/clock.c   ****    //__HAL_PWR_VOLTAGESCALING_ONFIG(PWR_REGULATOR_VOLTAGE_SCALE1); for using clock <= 100mhz 
  28:Src/clock.c   ****    temp_reg = read_reg(PWR_CR , ~(3u << 14 ));
  66              		.loc 1 28 0
  67 002c 654D     		ldr	r5, .L11+8
  68 002e 2C68     		ldr	r4, [r5]
  69 0030 24F44044 		bic	r4, r4, #49152
  70 0034 0194     		str	r4, [sp, #4]
  29:Src/clock.c   ****    temp_reg |= (3u << 14);
  71              		.loc 1 29 0
  72 0036 019C     		ldr	r4, [sp, #4]
  73 0038 44F44044 		orr	r4, r4, #49152
  74 003c 0194     		str	r4, [sp, #4]
  30:Src/clock.c   ****    write_reg( PWR_CR , temp_reg);
  75              		.loc 1 30 0
  76 003e 019C     		ldr	r4, [sp, #4]
  77 0040 2C60     		str	r4, [r5]
  31:Src/clock.c   ****    
  32:Src/clock.c   ****    //HSE clock bypass
  33:Src/clock.c   ****    	temp_reg = read_reg(RCC_CR, ~(1u << 18 ));
  78              		.loc 1 33 0
  79 0042 05F5E435 		add	r5, r5, #116736
  80 0046 2C68     		ldr	r4, [r5]
  81 0048 24F48024 		bic	r4, r4, #262144
  82 004c 0194     		str	r4, [sp, #4]
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 3


  34:Src/clock.c   **** 	temp_reg |= (0u << 18);
  83              		.loc 1 34 0
  84 004e 019C     		ldr	r4, [sp, #4]
  85 0050 0194     		str	r4, [sp, #4]
  35:Src/clock.c   ****     write_reg(RCC_CR, temp_reg);
  86              		.loc 1 35 0
  87 0052 019C     		ldr	r4, [sp, #4]
  88 0054 2C60     		str	r4, [r5]
  36:Src/clock.c   **** 	
  37:Src/clock.c   **** 	
  38:Src/clock.c   **** 	//bat hse
  39:Src/clock.c   **** 	temp_reg = read_reg(RCC_CR, ~(1u << 16 ));
  89              		.loc 1 39 0
  90 0056 24F48034 		bic	r4, r4, #65536
  91 005a 0194     		str	r4, [sp, #4]
  40:Src/clock.c   **** 	temp_reg |= (1u << 16);
  92              		.loc 1 40 0
  93 005c 019C     		ldr	r4, [sp, #4]
  94 005e 44F48034 		orr	r4, r4, #65536
  95 0062 0194     		str	r4, [sp, #4]
  41:Src/clock.c   ****     write_reg(RCC_CR, temp_reg);
  96              		.loc 1 41 0
  97 0064 019C     		ldr	r4, [sp, #4]
  98 0066 2C60     		str	r4, [r5]
  42:Src/clock.c   **** 	
  43:Src/clock.c   **** 	timeout = 0xFF;
  99              		.loc 1 43 0
 100 0068 FF24     		movs	r4, #255
 101 006a 0094     		str	r4, [sp]
 102              	.L3:
  44:Src/clock.c   ****     do {
  45:Src/clock.c   ****        
  46:Src/clock.c   ****         timeout--;
 103              		.loc 1 46 0 discriminator 2
 104 006c 009C     		ldr	r4, [sp]
 105 006e 013C     		subs	r4, r4, #1
 106 0070 0094     		str	r4, [sp]
  47:Src/clock.c   ****     } while ((0 == (read_reg(RCC_CR, (1u << 17)))) && (timeout > 0));
 107              		.loc 1 47 0 discriminator 2
 108 0072 554C     		ldr	r4, .L11+12
 109 0074 2468     		ldr	r4, [r4]
 110 0076 14F4003F 		tst	r4, #131072
 111 007a 02D1     		bne	.L2
 112              		.loc 1 47 0 is_stmt 0 discriminator 1
 113 007c 009D     		ldr	r5, [sp]
 114 007e 002D     		cmp	r5, #0
 115 0080 F4D1     		bne	.L3
 116              	.L2:
  48:Src/clock.c   **** 	
  49:Src/clock.c   **** 	
  50:Src/clock.c   ****     
  51:Src/clock.c   **** 	/* Disable the main PLL. */
  52:Src/clock.c   ****     temp_reg = read_reg(RCC_CR, ~(1 << 24));
 117              		.loc 1 52 0 is_stmt 1
 118 0082 24F08074 		bic	r4, r4, #16777216
 119 0086 0194     		str	r4, [sp, #4]
  53:Src/clock.c   ****     write_reg(RCC_CR, temp_reg);
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 4


 120              		.loc 1 53 0
 121 0088 019D     		ldr	r5, [sp, #4]
 122 008a 4F4C     		ldr	r4, .L11+12
 123 008c 2560     		str	r5, [r4]
  54:Src/clock.c   **** 	
  55:Src/clock.c   **** 	/* Wait till PLL is disable */
  56:Src/clock.c   ****     timeout = 0xFFF;
 124              		.loc 1 56 0
 125 008e 40F6FF74 		movw	r4, #4095
 126 0092 0094     		str	r4, [sp]
 127              	.L5:
  57:Src/clock.c   ****     do {
  58:Src/clock.c   ****         timeout--;
 128              		.loc 1 58 0 discriminator 2
 129 0094 009C     		ldr	r4, [sp]
 130 0096 013C     		subs	r4, r4, #1
 131 0098 0094     		str	r4, [sp]
  59:Src/clock.c   ****     } while ((0 != (read_reg(RCC_CR, (1 << 25)))) && (timeout > 0));
 132              		.loc 1 59 0 discriminator 2
 133 009a 4B4C     		ldr	r4, .L11+12
 134 009c 2468     		ldr	r4, [r4]
 135 009e 14F0007F 		tst	r4, #33554432
 136 00a2 02D0     		beq	.L4
 137              		.loc 1 59 0 is_stmt 0 discriminator 1
 138 00a4 009C     		ldr	r4, [sp]
 139 00a6 002C     		cmp	r4, #0
 140 00a8 F4D1     		bne	.L5
 141              	.L4:
  60:Src/clock.c   **** 	
  61:Src/clock.c   **** 	// can thiet lap ko se doc sai dia chi lenh , du lieu FLASH_LATENCY_2
  62:Src/clock.c   **** 	write_reg(FLASH_ACR , 0x03u);
 142              		.loc 1 62 0 is_stmt 1
 143 00aa 484C     		ldr	r4, .L11+16
 144 00ac 0325     		movs	r5, #3
 145 00ae 2560     		str	r5, [r4]
  63:Src/clock.c   **** 	
  64:Src/clock.c   **** 
  65:Src/clock.c   **** 	
  66:Src/clock.c   **** 	#if 0
  67:Src/clock.c   ****     temp_reg = read_reg(RCC_PLLCFGR, ~(0x01 << 22));
  68:Src/clock.c   ****     temp_reg |= (1u <<22);
  69:Src/clock.c   ****     write_reg(RCC_PLLCFGR, temp_reg);
  70:Src/clock.c   **** 	#endif
  71:Src/clock.c   **** 
  72:Src/clock.c   ****     	
  73:Src/clock.c   **** 	
  74:Src/clock.c   **** 	
  75:Src/clock.c   ****     temp_reg = read_reg(RCC_PLLCFGR, ~0x3Fu);
 146              		.loc 1 75 0
 147 00b0 A4F57F74 		sub	r4, r4, #1020
 148 00b4 2568     		ldr	r5, [r4]
 149 00b6 25F03F05 		bic	r5, r5, #63
 150 00ba 0195     		str	r5, [sp, #4]
  76:Src/clock.c   ****     temp_reg |= div_m;
 151              		.loc 1 76 0
 152 00bc 019D     		ldr	r5, [sp, #4]
 153 00be 2843     		orrs	r0, r0, r5
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 5


 154              	.LVL2:
 155 00c0 0190     		str	r0, [sp, #4]
  77:Src/clock.c   ****     write_reg(RCC_PLLCFGR, temp_reg);
 156              		.loc 1 77 0
 157 00c2 0198     		ldr	r0, [sp, #4]
 158 00c4 2060     		str	r0, [r4]
  78:Src/clock.c   ****     
  79:Src/clock.c   **** 	// nhan *N   *100
  80:Src/clock.c   ****     temp_reg = read_reg(RCC_PLLCFGR, ~(0x1FFu << 6));
 159              		.loc 1 80 0
 160 00c6 20F4FF40 		bic	r0, r0, #32640
 161 00ca 20F04000 		bic	r0, r0, #64
 162 00ce 0190     		str	r0, [sp, #4]
  81:Src/clock.c   ****     temp_reg |= (mul_n << 6);
 163              		.loc 1 81 0
 164 00d0 0198     		ldr	r0, [sp, #4]
 165 00d2 40EA8111 		orr	r1, r0, r1, lsl #6
 166              	.LVL3:
 167 00d6 0191     		str	r1, [sp, #4]
  82:Src/clock.c   ****     write_reg(RCC_PLLCFGR, temp_reg);
 168              		.loc 1 82 0
 169 00d8 0199     		ldr	r1, [sp, #4]
 170 00da 2160     		str	r1, [r4]
  83:Src/clock.c   **** 	
  84:Src/clock.c   **** 	// chia /P  /2
  85:Src/clock.c   **** 
  86:Src/clock.c   ****     temp_reg = read_reg(RCC_PLLCFGR, ~(0x3u<< 16));
 171              		.loc 1 86 0
 172 00dc 21F44031 		bic	r1, r1, #196608
 173 00e0 0191     		str	r1, [sp, #4]
  87:Src/clock.c   ****     temp_reg |= (div_p << 16);
 174              		.loc 1 87 0
 175 00e2 0199     		ldr	r1, [sp, #4]
 176 00e4 41EA0242 		orr	r2, r1, r2, lsl #16
 177              	.LVL4:
 178 00e8 0192     		str	r2, [sp, #4]
  88:Src/clock.c   ****     write_reg(RCC_PLLCFGR, temp_reg);
 179              		.loc 1 88 0
 180 00ea 019A     		ldr	r2, [sp, #4]
 181 00ec 2260     		str	r2, [r4]
  89:Src/clock.c   **** 	
  90:Src/clock.c   **** 	
  91:Src/clock.c   **** 	/* Enable the main PLL. */
  92:Src/clock.c   ****     temp_reg = read_reg(RCC_CR, ~(1 << 24));
 182              		.loc 1 92 0
 183 00ee 3649     		ldr	r1, .L11+12
 184 00f0 0A68     		ldr	r2, [r1]
 185 00f2 22F08072 		bic	r2, r2, #16777216
 186 00f6 0192     		str	r2, [sp, #4]
  93:Src/clock.c   ****     temp_reg |= (1 << 24);
 187              		.loc 1 93 0
 188 00f8 019A     		ldr	r2, [sp, #4]
 189 00fa 42F08072 		orr	r2, r2, #16777216
 190 00fe 0192     		str	r2, [sp, #4]
  94:Src/clock.c   ****     write_reg(RCC_CR, temp_reg);
 191              		.loc 1 94 0
 192 0100 019A     		ldr	r2, [sp, #4]
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 6


 193 0102 0A60     		str	r2, [r1]
  95:Src/clock.c   **** 	
  96:Src/clock.c   **** 	/* Wait till PLL is ready */
  97:Src/clock.c   ****     timeout = 0xFFFF;
 194              		.loc 1 97 0
 195 0104 4FF6FF72 		movw	r2, #65535
 196 0108 0092     		str	r2, [sp]
 197              	.L7:
  98:Src/clock.c   ****     do {
  99:Src/clock.c   ****         timeout--;
 198              		.loc 1 99 0 discriminator 2
 199 010a 009A     		ldr	r2, [sp]
 200 010c 013A     		subs	r2, r2, #1
 201 010e 0092     		str	r2, [sp]
 100:Src/clock.c   ****     } while ((0 == (read_reg(RCC_CR, (1 << 25)))) && (timeout > 0));
 202              		.loc 1 100 0 discriminator 2
 203 0110 2D4A     		ldr	r2, .L11+12
 204 0112 1268     		ldr	r2, [r2]
 205 0114 12F0007F 		tst	r2, #33554432
 206 0118 02D1     		bne	.L6
 207              		.loc 1 100 0 is_stmt 0 discriminator 1
 208 011a 009A     		ldr	r2, [sp]
 209 011c 002A     		cmp	r2, #0
 210 011e F4D1     		bne	.L7
 211              	.L6:
 101:Src/clock.c   **** 	
 102:Src/clock.c   **** 
 103:Src/clock.c   **** 	//  chia 1 
 104:Src/clock.c   ****     temp_reg = read_reg(RCC_CFGR, ~(0xFu << 4));
 212              		.loc 1 104 0 is_stmt 1
 213 0120 2B4A     		ldr	r2, .L11+20
 214 0122 1168     		ldr	r1, [r2]
 215 0124 21F0F001 		bic	r1, r1, #240
 216 0128 0191     		str	r1, [sp, #4]
 105:Src/clock.c   **** 	temp_reg |= ( div_ahb << 4);
 217              		.loc 1 105 0
 218 012a 0199     		ldr	r1, [sp, #4]
 219 012c 0498     		ldr	r0, [sp, #16]
 220 012e 41EA0011 		orr	r1, r1, r0, lsl #4
 221 0132 0191     		str	r1, [sp, #4]
 106:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);	
 222              		.loc 1 106 0
 223 0134 0199     		ldr	r1, [sp, #4]
 224 0136 1160     		str	r1, [r2]
 107:Src/clock.c   **** 	
 108:Src/clock.c   **** 	 /* APB1 prescaler */
 109:Src/clock.c   **** 	// chia toi da
 110:Src/clock.c   ****     temp_reg = read_reg(RCC_CFGR, ~(0x07u << 10));
 225              		.loc 1 110 0
 226 0138 21F4E051 		bic	r1, r1, #7168
 227 013c 0191     		str	r1, [sp, #4]
 111:Src/clock.c   **** 	temp_reg |= (APB_DIV16 << 10);
 228              		.loc 1 111 0
 229 013e 0199     		ldr	r1, [sp, #4]
 230 0140 41F4E051 		orr	r1, r1, #7168
 231 0144 0191     		str	r1, [sp, #4]
 112:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 7


 232              		.loc 1 112 0
 233 0146 0199     		ldr	r1, [sp, #4]
 234 0148 1160     		str	r1, [r2]
 113:Src/clock.c   **** 	// APB2 giong APB1
 114:Src/clock.c   **** 	temp_reg = read_reg(RCC_CFGR, ~(0x07u << 13));
 235              		.loc 1 114 0
 236 014a 21F46041 		bic	r1, r1, #57344
 237 014e 0191     		str	r1, [sp, #4]
 115:Src/clock.c   **** 	temp_reg |= (APB_DIV16 << 13);
 238              		.loc 1 115 0
 239 0150 0199     		ldr	r1, [sp, #4]
 240 0152 41F46041 		orr	r1, r1, #57344
 241 0156 0191     		str	r1, [sp, #4]
 116:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 242              		.loc 1 116 0
 243 0158 0199     		ldr	r1, [sp, #4]
 244 015a 1160     		str	r1, [r2]
 117:Src/clock.c   **** 	
 118:Src/clock.c   **** 
 119:Src/clock.c   **** 	//select source
 120:Src/clock.c   ****     temp_reg = read_reg(RCC_CFGR, ~(0x3u << 0));
 245              		.loc 1 120 0
 246 015c 21F00301 		bic	r1, r1, #3
 247 0160 0191     		str	r1, [sp, #4]
 121:Src/clock.c   ****     temp_reg |= (system_source << 0);
 248              		.loc 1 121 0
 249 0162 0199     		ldr	r1, [sp, #4]
 250 0164 1943     		orrs	r1, r1, r3
 251 0166 0191     		str	r1, [sp, #4]
 122:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 252              		.loc 1 122 0
 253 0168 0199     		ldr	r1, [sp, #4]
 254 016a 1160     		str	r1, [r2]
 123:Src/clock.c   ****     
 124:Src/clock.c   ****     // /* Wait till System clock switch is ready */
 125:Src/clock.c   ****     timeout = 0xFFFFFF;
 255              		.loc 1 125 0
 256 016c 6FF07F42 		mvn	r2, #-16777216
 257 0170 0092     		str	r2, [sp]
 258              	.L9:
 126:Src/clock.c   ****     do {
 127:Src/clock.c   ****         timeout--;
 259              		.loc 1 127 0 discriminator 2
 260 0172 009A     		ldr	r2, [sp]
 261 0174 013A     		subs	r2, r2, #1
 262 0176 0092     		str	r2, [sp]
 128:Src/clock.c   ****     } while (((system_source << 2) != (read_reg(RCC_CFGR, (0x3 << 2)))) && (timeout > 0));
 263              		.loc 1 128 0 discriminator 2
 264 0178 154A     		ldr	r2, .L11+20
 265 017a 1268     		ldr	r2, [r2]
 266 017c 02F00C01 		and	r1, r2, #12
 267 0180 B1EB830F 		cmp	r1, r3, lsl #2
 268 0184 02D0     		beq	.L8
 269              		.loc 1 128 0 is_stmt 0 discriminator 1
 270 0186 0099     		ldr	r1, [sp]
 271 0188 0029     		cmp	r1, #0
 272 018a F2D1     		bne	.L9
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 8


 273              	.L8:
 129:Src/clock.c   **** 	
 130:Src/clock.c   **** 	
 131:Src/clock.c   ****     /* APB1 prescaler */
 132:Src/clock.c   **** 	//  apb1 chia 2
 133:Src/clock.c   ****     temp_reg = read_reg(RCC_CFGR, ~(7u << 10));
 274              		.loc 1 133 0 is_stmt 1
 275 018c 22F4E052 		bic	r2, r2, #7168
 276 0190 0192     		str	r2, [sp, #4]
 134:Src/clock.c   **** 	temp_reg |=  (div_apb1 << 10);
 277              		.loc 1 134 0
 278 0192 019B     		ldr	r3, [sp, #4]
 279              	.LVL5:
 280 0194 059A     		ldr	r2, [sp, #20]
 281 0196 43EA8223 		orr	r3, r3, r2, lsl #10
 282 019a 0193     		str	r3, [sp, #4]
 135:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 283              		.loc 1 135 0
 284 019c 019B     		ldr	r3, [sp, #4]
 285 019e 0C4A     		ldr	r2, .L11+20
 286 01a0 1360     		str	r3, [r2]
 136:Src/clock.c   **** 	
 137:Src/clock.c   **** 	
 138:Src/clock.c   **** 	// apb2 chia 1
 139:Src/clock.c   **** 	temp_reg = read_reg(RCC_CFGR, ~(7u << 13));
 287              		.loc 1 139 0
 288 01a2 23F46043 		bic	r3, r3, #57344
 289 01a6 0193     		str	r3, [sp, #4]
 140:Src/clock.c   **** 	temp_reg |=  (div_apb2 << 10);
 290              		.loc 1 140 0
 291 01a8 019B     		ldr	r3, [sp, #4]
 292 01aa 0699     		ldr	r1, [sp, #24]
 293 01ac 43EA8123 		orr	r3, r3, r1, lsl #10
 294 01b0 0193     		str	r3, [sp, #4]
 141:Src/clock.c   ****     write_reg(RCC_CFGR, temp_reg);
 295              		.loc 1 141 0
 296 01b2 019B     		ldr	r3, [sp, #4]
 297 01b4 1360     		str	r3, [r2]
 142:Src/clock.c   **** 	
 143:Src/clock.c   **** 
 144:Src/clock.c   **** }
 298              		.loc 1 144 0
 299 01b6 02B0     		add	sp, sp, #8
 300              	.LCFI2:
 301              		.cfi_def_cfa_offset 8
 302              		@ sp needed
 303 01b8 30BC     		pop	{r4, r5}
 304              	.LCFI3:
 305              		.cfi_restore 5
 306              		.cfi_restore 4
 307              		.cfi_def_cfa_offset 0
 308 01ba 7047     		bx	lr
 309              	.L12:
 310              		.align	2
 311              	.L11:
 312 01bc 88ED00E0 		.word	-536810104
 313 01c0 0C380240 		.word	1073887244
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 9


 314 01c4 00700040 		.word	1073770496
 315 01c8 00380240 		.word	1073887232
 316 01cc 003C0240 		.word	1073888256
 317 01d0 08380240 		.word	1073887240
 318              		.cfi_endproc
 319              	.LFE0:
 321              		.section	.text.rcc_enableclk,"ax",%progbits
 322              		.align	1
 323              		.global	rcc_enableclk
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv4-sp-d16
 329              	rcc_enableclk:
 330              	.LFB1:
 145:Src/clock.c   **** void rcc_enableclk(){
 331              		.loc 1 145 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 146:Src/clock.c   **** 	u32_t temp_reg;
 147:Src/clock.c   **** 	
 148:Src/clock.c   **** 	// enable port h
 149:Src/clock.c   **** 	temp_reg = read_reg(RCC_AHB1ENR , ~(1 <<7));
 336              		.loc 1 149 0
 337 0000 024A     		ldr	r2, .L14
 338 0002 1368     		ldr	r3, [r2]
 339              	.LVL6:
 150:Src/clock.c   **** 	temp_reg  = temp_reg | (1 << 7 );
 151:Src/clock.c   **** 	write_reg(RCC_AHB1ENR , temp_reg );	
 152:Src/clock.c   **** 
 153:Src/clock.c   **** 	//port d 
 154:Src/clock.c   **** 	temp_reg = read_reg(RCC_AHB1ENR , ~(1 <<3));
 155:Src/clock.c   **** 	temp_reg  = temp_reg | (1 << 3 );
 156:Src/clock.c   **** 	write_reg(RCC_AHB1ENR , temp_reg );
 157:Src/clock.c   **** 	
 158:Src/clock.c   **** 	//port b
 159:Src/clock.c   **** 	temp_reg = read_reg(RCC_AHB1ENR , ~(1 <<1));
 160:Src/clock.c   **** 	temp_reg  = temp_reg | (1 << 1 );
 161:Src/clock.c   **** 	write_reg(RCC_AHB1ENR , temp_reg );
 162:Src/clock.c   **** 	
 163:Src/clock.c   **** 		//port a
 164:Src/clock.c   **** 	temp_reg = read_reg(RCC_AHB1ENR , ~(1 <<0));
 165:Src/clock.c   **** 	temp_reg  = temp_reg | (1u << 0 );
 340              		.loc 1 165 0
 341 0004 43F08B03 		orr	r3, r3, #139
 342              	.LVL7:
 166:Src/clock.c   **** 	write_reg(RCC_AHB1ENR , temp_reg );
 343              		.loc 1 166 0
 344 0008 1360     		str	r3, [r2]
 167:Src/clock.c   **** 	
 168:Src/clock.c   **** 	
 169:Src/clock.c   ****   
 170:Src/clock.c   **** }...
 345              		.loc 1 170 0
 346 000a 7047     		bx	lr
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 10


 347              	.L15:
 348              		.align	2
 349              	.L14:
 350 000c 30380240 		.word	1073887280
 351              		.cfi_endproc
 352              	.LFE1:
 354              		.text
 355              	.Letext0:
 356              		.file 2 "Inc/main.h"
 357              		.file 3 "Inc/stm32f4xx_it.h"
ARM GAS  E:\msys32\tmp\ccrpJ9PD.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 clock.c
E:\msys32\tmp\ccrpJ9PD.s:18     .text.system_init:00000000 $t
E:\msys32\tmp\ccrpJ9PD.s:25     .text.system_init:00000000 system_init
E:\msys32\tmp\ccrpJ9PD.s:312    .text.system_init:000001bc $d
E:\msys32\tmp\ccrpJ9PD.s:322    .text.rcc_enableclk:00000000 $t
E:\msys32\tmp\ccrpJ9PD.s:329    .text.rcc_enableclk:00000000 rcc_enableclk
E:\msys32\tmp\ccrpJ9PD.s:350    .text.rcc_enableclk:0000000c $d

NO UNDEFINED SYMBOLS
