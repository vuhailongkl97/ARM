ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TIM2_IRQHandler,"ax",%progbits
  18              		.align	1
  19              		.global	TIM2_IRQHandler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	TIM2_IRQHandler:
  26              	.LFB0:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** 
   2:Src/stm32f4xx_it.c **** #include "project.h"
   3:Src/stm32f4xx_it.c **** 
   4:Src/stm32f4xx_it.c **** volatile unsigned int led_state = 0;
   5:Src/stm32f4xx_it.c **** volatile unsigned char rx_data = 0;
   6:Src/stm32f4xx_it.c **** 
   7:Src/stm32f4xx_it.c **** 
   8:Src/stm32f4xx_it.c **** 
   9:Src/stm32f4xx_it.c **** void TIM2_IRQHandler(){
  28              		.loc 1 9 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  10:Src/stm32f4xx_it.c ****  	unsigned temp_reg;
  11:Src/stm32f4xx_it.c **** 
  12:Src/stm32f4xx_it.c **** 	GPIO_TongglePin(mGPIOD , (mGPIO_PIN(12)) );
  37              		.loc 1 12 0
  38 0002 4FF48051 		mov	r1, #4096
  39 0006 0D48     		ldr	r0, .L5
  40 0008 FFF7FEFF 		bl	GPIO_TongglePin
  41              	.LVL0:
  13:Src/stm32f4xx_it.c **** 	//capture
  14:Src/stm32f4xx_it.c **** 	if(read_reg(mTIM_SR(mTIM2) , 2u) ){
  42              		.loc 1 14 0
  43 000c 0C4B     		ldr	r3, .L5+4
  44 000e 1B68     		ldr	r3, [r3]
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 2


  45 0010 13F0020F 		tst	r3, #2
  46 0014 09D1     		bne	.L4
  47              	.L2:
  15:Src/stm32f4xx_it.c **** 		GPIO_TongglePin(mGPIOD , (mGPIO_PIN(14)) );
  16:Src/stm32f4xx_it.c **** 		//clear flag 
  17:Src/stm32f4xx_it.c **** 		write_reg(mTIM_SR(mTIM2) , 0u);	
  18:Src/stm32f4xx_it.c **** 	}
  19:Src/stm32f4xx_it.c **** 	
  20:Src/stm32f4xx_it.c ****  // clear interrupt flag
  21:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(mTIM_SR(mTIM2) , ~(0x1u<<0));
  48              		.loc 1 21 0
  49 0016 0A4A     		ldr	r2, .L5+4
  50 0018 1368     		ldr	r3, [r2]
  51 001a 23F00103 		bic	r3, r3, #1
  52              	.LVL1:
  22:Src/stm32f4xx_it.c ****     write_reg(mTIM_SR(mTIM2) , temp_reg);
  53              		.loc 1 22 0
  54 001e 1360     		str	r3, [r2]
  23:Src/stm32f4xx_it.c ****     write_reg(mNVIC_ICPR , (1 << 28) );
  55              		.loc 1 23 0
  56 0020 084B     		ldr	r3, .L5+8
  57              	.LVL2:
  58 0022 4FF08052 		mov	r2, #268435456
  59              	.LVL3:
  60 0026 1A60     		str	r2, [r3]
  24:Src/stm32f4xx_it.c **** 
  25:Src/stm32f4xx_it.c **** }
  61              		.loc 1 25 0
  62 0028 08BD     		pop	{r3, pc}
  63              	.LVL4:
  64              	.L4:
  15:Src/stm32f4xx_it.c **** 		//clear flag 
  65              		.loc 1 15 0
  66 002a 4FF48041 		mov	r1, #16384
  67 002e 0348     		ldr	r0, .L5
  68 0030 FFF7FEFF 		bl	GPIO_TongglePin
  69              	.LVL5:
  17:Src/stm32f4xx_it.c **** 	}
  70              		.loc 1 17 0
  71 0034 024B     		ldr	r3, .L5+4
  72 0036 0022     		movs	r2, #0
  73 0038 1A60     		str	r2, [r3]
  74 003a ECE7     		b	.L2
  75              	.L6:
  76              		.align	2
  77              	.L5:
  78 003c 000C0240 		.word	1073875968
  79 0040 10000040 		.word	1073741840
  80 0044 80E200E0 		.word	-536812928
  81              		.cfi_endproc
  82              	.LFE0:
  84              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  85              		.align	1
  86              		.global	EXTI1_IRQHandler
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 3


  90              		.fpu fpv4-sp-d16
  92              	EXTI1_IRQHandler:
  93              	.LFB1:
  26:Src/stm32f4xx_it.c **** 
  27:Src/stm32f4xx_it.c **** void EXTI1_IRQHandler(){
  94              		.loc 1 27 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  28:Src/stm32f4xx_it.c **** 	
  29:Src/stm32f4xx_it.c **** }
  99              		.loc 1 29 0
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE1:
 104              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 105              		.align	1
 106              		.global	EXTI0_IRQHandler
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	EXTI0_IRQHandler:
 113              	.LFB2:
  30:Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(){
 114              		.loc 1 30 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 08B5     		push	{r3, lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 3, -8
 122              		.cfi_offset 14, -4
  31:Src/stm32f4xx_it.c **** 	unsigned int temp_reg;
  32:Src/stm32f4xx_it.c **** 	
  33:Src/stm32f4xx_it.c **** 	GPIO_TongglePin(mGPIOD , mGPIO_PIN(15));
 123              		.loc 1 33 0
 124 0002 4FF40041 		mov	r1, #32768
 125 0006 0548     		ldr	r0, .L10
 126 0008 FFF7FEFF 		bl	GPIO_TongglePin
 127              	.LVL6:
  34:Src/stm32f4xx_it.c **** 	
  35:Src/stm32f4xx_it.c **** 	// xoa co ngat 
  36:Src/stm32f4xx_it.c **** 	temp_reg = (1 <<0) ;
  37:Src/stm32f4xx_it.c **** 	write_reg(mEXTI_PR , temp_reg );
 128              		.loc 1 37 0
 129 000c 044B     		ldr	r3, .L10+4
 130 000e 0122     		movs	r2, #1
 131 0010 1A60     		str	r2, [r3]
  38:Src/stm32f4xx_it.c **** 	write_reg(mNVIC_ICPR , (1 << 6) );
 132              		.loc 1 38 0
 133 0012 044B     		ldr	r3, .L10+8
 134 0014 4022     		movs	r2, #64
 135 0016 1A60     		str	r2, [r3]
  39:Src/stm32f4xx_it.c **** 	
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 4


  40:Src/stm32f4xx_it.c **** }
 136              		.loc 1 40 0
 137 0018 08BD     		pop	{r3, pc}
 138              	.L11:
 139 001a 00BF     		.align	2
 140              	.L10:
 141 001c 000C0240 		.word	1073875968
 142 0020 143C0140 		.word	1073822740
 143 0024 80E200E0 		.word	-536812928
 144              		.cfi_endproc
 145              	.LFE2:
 147              		.section	.text.USART1_IRQHandler,"ax",%progbits
 148              		.align	1
 149              		.global	USART1_IRQHandler
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv4-sp-d16
 155              	USART1_IRQHandler:
 156              	.LFB3:
  41:Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
  42:Src/stm32f4xx_it.c **** {
 157              		.loc 1 42 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 8
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162 0000 82B0     		sub	sp, sp, #8
 163              	.LCFI2:
 164              		.cfi_def_cfa_offset 8
  43:Src/stm32f4xx_it.c ****     volatile unsigned int temp;
  44:Src/stm32f4xx_it.c **** 	unsigned  int temp_reg;
  45:Src/stm32f4xx_it.c ****     
  46:Src/stm32f4xx_it.c ****     temp = read_reg(mUSART_SR, 1 << 6);
 165              		.loc 1 46 0
 166 0002 0C4B     		ldr	r3, .L16
 167 0004 1B68     		ldr	r3, [r3]
 168 0006 03F04003 		and	r3, r3, #64
 169 000a 0193     		str	r3, [sp, #4]
  47:Src/stm32f4xx_it.c ****     if (0 != temp) /* Tx - TC flag */
 170              		.loc 1 47 0
 171 000c 019B     		ldr	r3, [sp, #4]
 172 000e 23B1     		cbz	r3, .L13
  48:Src/stm32f4xx_it.c ****     {
  49:Src/stm32f4xx_it.c **** 		// clear flag tc
  50:Src/stm32f4xx_it.c **** 		temp_reg = read_reg(mUSART_SR , ~(1u << 6));
 173              		.loc 1 50 0
 174 0010 084A     		ldr	r2, .L16
 175 0012 1368     		ldr	r3, [r2]
 176 0014 23F04003 		bic	r3, r3, #64
 177              	.LVL7:
  51:Src/stm32f4xx_it.c **** 		temp_reg |= (0u << 6);
  52:Src/stm32f4xx_it.c ****         write_reg(mUSART_SR, temp_reg);
 178              		.loc 1 52 0
 179 0018 1360     		str	r3, [r2]
 180              	.LVL8:
 181              	.L13:
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 5


  53:Src/stm32f4xx_it.c **** 		
  54:Src/stm32f4xx_it.c ****     }
  55:Src/stm32f4xx_it.c ****     temp = read_reg(mUSART_SR, 1 << 5);
 182              		.loc 1 55 0
 183 001a 064B     		ldr	r3, .L16
 184 001c 1B68     		ldr	r3, [r3]
 185 001e 03F02003 		and	r3, r3, #32
 186 0022 0193     		str	r3, [sp, #4]
  56:Src/stm32f4xx_it.c ****     if (0 != temp)  /* Rx - RXNE flag */
 187              		.loc 1 56 0
 188 0024 019B     		ldr	r3, [sp, #4]
 189 0026 1BB1     		cbz	r3, .L12
  57:Src/stm32f4xx_it.c ****     {
  58:Src/stm32f4xx_it.c ****         rx_data = read_reg(mUSART_DR , 0x000000FF);
 190              		.loc 1 58 0
 191 0028 034B     		ldr	r3, .L16+4
 192 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 193 002c 034B     		ldr	r3, .L16+8
 194 002e 1A70     		strb	r2, [r3]
 195              	.L12:
  59:Src/stm32f4xx_it.c ****     }
  60:Src/stm32f4xx_it.c **** }
 196              		.loc 1 60 0
 197 0030 02B0     		add	sp, sp, #8
 198              	.LCFI3:
 199              		.cfi_def_cfa_offset 0
 200              		@ sp needed
 201 0032 7047     		bx	lr
 202              	.L17:
 203              		.align	2
 204              	.L16:
 205 0034 00100140 		.word	1073811456
 206 0038 04100140 		.word	1073811460
 207 003c 00000000 		.word	.LANCHOR0
 208              		.cfi_endproc
 209              	.LFE3:
 211              		.section	.text.NMI_Handler,"ax",%progbits
 212              		.align	1
 213              		.global	NMI_Handler
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	NMI_Handler:
 220              	.LFB4:
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  63:Src/stm32f4xx_it.c **** {
 221              		.loc 1 63 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
  64:Src/stm32f4xx_it.c **** }
 226              		.loc 1 64 0
 227 0000 7047     		bx	lr
 228              		.cfi_endproc
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 6


 229              	.LFE4:
 231              		.section	.text.HardFault_Handler,"ax",%progbits
 232              		.align	1
 233              		.global	HardFault_Handler
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	HardFault_Handler:
 240              	.LFB5:
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  67:Src/stm32f4xx_it.c **** {
 241              		.loc 1 67 0
 242              		.cfi_startproc
 243              		@ Volatile: function does not return.
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247              	.L20:
 248 0000 FEE7     		b	.L20
 249              		.cfi_endproc
 250              	.LFE5:
 252              		.section	.text.MemManage_Handler,"ax",%progbits
 253              		.align	1
 254              		.global	MemManage_Handler
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	MemManage_Handler:
 261              	.LFB6:
  68:Src/stm32f4xx_it.c ****   while (1)
  69:Src/stm32f4xx_it.c ****   {
  70:Src/stm32f4xx_it.c ****   }
  71:Src/stm32f4xx_it.c **** }
  72:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  73:Src/stm32f4xx_it.c **** {
 262              		.loc 1 73 0
 263              		.cfi_startproc
 264              		@ Volatile: function does not return.
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.L22:
 269 0000 FEE7     		b	.L22
 270              		.cfi_endproc
 271              	.LFE6:
 273              		.section	.text.BusFault_Handler,"ax",%progbits
 274              		.align	1
 275              		.global	BusFault_Handler
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	BusFault_Handler:
 282              	.LFB7:
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 7


  74:Src/stm32f4xx_it.c ****   while (1)
  75:Src/stm32f4xx_it.c ****   {
  76:Src/stm32f4xx_it.c ****   }
  77:Src/stm32f4xx_it.c **** }
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
  80:Src/stm32f4xx_it.c **** {
 283              		.loc 1 80 0
 284              		.cfi_startproc
 285              		@ Volatile: function does not return.
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289              	.L24:
 290 0000 FEE7     		b	.L24
 291              		.cfi_endproc
 292              	.LFE7:
 294              		.section	.text.UsageFault_Handler,"ax",%progbits
 295              		.align	1
 296              		.global	UsageFault_Handler
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	UsageFault_Handler:
 303              	.LFB8:
  81:Src/stm32f4xx_it.c ****   while (1)
  82:Src/stm32f4xx_it.c ****   {
  83:Src/stm32f4xx_it.c ****   }
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c **** }
  86:Src/stm32f4xx_it.c **** 
  87:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
  88:Src/stm32f4xx_it.c **** {
 304              		.loc 1 88 0
 305              		.cfi_startproc
 306              		@ Volatile: function does not return.
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.L26:
 311 0000 FEE7     		b	.L26
 312              		.cfi_endproc
 313              	.LFE8:
 315              		.section	.text.SVC_Handler,"ax",%progbits
 316              		.align	1
 317              		.global	SVC_Handler
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	SVC_Handler:
 324              	.LFB9:
  89:Src/stm32f4xx_it.c ****   while (1)
  90:Src/stm32f4xx_it.c ****   {
  91:Src/stm32f4xx_it.c ****   }
  92:Src/stm32f4xx_it.c **** }
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 8


  93:Src/stm32f4xx_it.c **** void SVC_Handler(void)
  94:Src/stm32f4xx_it.c **** {
 325              		.loc 1 94 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
  95:Src/stm32f4xx_it.c **** }
 330              		.loc 1 95 0
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE9:
 335              		.section	.text.DebugMon_Handler,"ax",%progbits
 336              		.align	1
 337              		.global	DebugMon_Handler
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu fpv4-sp-d16
 343              	DebugMon_Handler:
 344              	.LFB10:
  96:Src/stm32f4xx_it.c **** 
  97:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
  98:Src/stm32f4xx_it.c **** {
 345              		.loc 1 98 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
  99:Src/stm32f4xx_it.c **** }
 350              		.loc 1 99 0
 351 0000 7047     		bx	lr
 352              		.cfi_endproc
 353              	.LFE10:
 355              		.section	.text.PendSV_Handler,"ax",%progbits
 356              		.align	1
 357              		.global	PendSV_Handler
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu fpv4-sp-d16
 363              	PendSV_Handler:
 364              	.LFB11:
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 102:Src/stm32f4xx_it.c **** {
 365              		.loc 1 102 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 103:Src/stm32f4xx_it.c **** }
 370              		.loc 1 103 0
 371 0000 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE11:
 375              		.section	.text.SysTick_Handler,"ax",%progbits
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 9


 376              		.align	1
 377              		.global	SysTick_Handler
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv4-sp-d16
 383              	SysTick_Handler:
 384              	.LFB12:
 104:Src/stm32f4xx_it.c **** 
 105:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 106:Src/stm32f4xx_it.c **** {
 385              		.loc 1 106 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 107:Src/stm32f4xx_it.c **** }
 390              		.loc 1 107 0
 391 0000 7047     		bx	lr
 392              		.cfi_endproc
 393              	.LFE12:
 395              		.section	.text.mNVIC_SetPriority,"ax",%progbits
 396              		.align	1
 397              		.global	mNVIC_SetPriority
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu fpv4-sp-d16
 403              	mNVIC_SetPriority:
 404              	.LFB13:
 108:Src/stm32f4xx_it.c **** void mNVIC_SetPriority(IRQn_Type ipr , u32_t pri){
 405              		.loc 1 108 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 410              	.LVL9:
 109:Src/stm32f4xx_it.c **** 	// chia 4 .. stm32f4 chi dung 4 bit priority	 
 110:Src/stm32f4xx_it.c **** 	u32_t addr_ipr = (mNVIC_IPR(( (u32_t)ipr >> 2u ))) ;
 411              		.loc 1 110 0
 412 0000 8008     		lsrs	r0, r0, #2
 413              	.LVL10:
 414 0002 00F16050 		add	r0, r0, #939524096
 415 0006 00F56450 		add	r0, r0, #14592
 416 000a 8000     		lsls	r0, r0, #2
 417              	.LVL11:
 111:Src/stm32f4xx_it.c **** 	u32_t temp_reg = read_reg(addr_ipr, ~0u);
 418              		.loc 1 111 0
 419 000c 0368     		ldr	r3, [r0]
 420              	.LVL12:
 112:Src/stm32f4xx_it.c **** 	temp_reg |=  ( ((u32_t)pri  & 0xFFu ) << 4u ) ;
 421              		.loc 1 112 0
 422 000e 0901     		lsls	r1, r1, #4
 423              	.LVL13:
 424 0010 01F47F61 		and	r1, r1, #4080
 425 0014 1943     		orrs	r1, r1, r3
 426              	.LVL14:
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 10


 113:Src/stm32f4xx_it.c **** 	write_reg(addr_ipr, temp_reg);
 427              		.loc 1 113 0
 428 0016 0160     		str	r1, [r0]
 114:Src/stm32f4xx_it.c **** 	 
 115:Src/stm32f4xx_it.c **** }
 429              		.loc 1 115 0
 430 0018 7047     		bx	lr
 431              		.cfi_endproc
 432              	.LFE13:
 434              		.section	.text.mNVIC_EnableIRQ,"ax",%progbits
 435              		.align	1
 436              		.global	mNVIC_EnableIRQ
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	mNVIC_EnableIRQ:
 443              	.LFB14:
 116:Src/stm32f4xx_it.c **** void mNVIC_EnableIRQ(IRQn_Type irq){
 444              		.loc 1 116 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449              	.LVL15:
 117:Src/stm32f4xx_it.c **** 	// iser /32 ,%32
 118:Src/stm32f4xx_it.c **** 	u32_t addr_irq = mNVIC_ISER( ((u32_t)irq >> 5u) )  ;
 450              		.loc 1 118 0
 451 0000 4309     		lsrs	r3, r0, #5
 452 0002 03F13823 		add	r3, r3, #939538432
 453 0006 4033     		adds	r3, r3, #64
 454 0008 9B00     		lsls	r3, r3, #2
 455              	.LVL16:
 119:Src/stm32f4xx_it.c **** 	
 120:Src/stm32f4xx_it.c **** 	u32_t temp_reg = read_reg(addr_irq , ~0u);
 456              		.loc 1 120 0
 457 000a 1968     		ldr	r1, [r3]
 458              	.LVL17:
 121:Src/stm32f4xx_it.c **** 	temp_reg |=  (u32_t)(1UL << ((u32_t)irq & 0x1Fu )) ;
 459              		.loc 1 121 0
 460 000c 00F01F02 		and	r2, r0, #31
 461 0010 0120     		movs	r0, #1
 462              	.LVL18:
 463 0012 9040     		lsls	r0, r0, r2
 464 0014 0843     		orrs	r0, r0, r1
 465              	.LVL19:
 122:Src/stm32f4xx_it.c **** 	write_reg(addr_irq, temp_reg);
 466              		.loc 1 122 0
 467 0016 1860     		str	r0, [r3]
 123:Src/stm32f4xx_it.c **** 	
 124:Src/stm32f4xx_it.c **** }
 468              		.loc 1 124 0
 469 0018 7047     		bx	lr
 470              		.cfi_endproc
 471              	.LFE14:
 473              		.section	.text.init_interrupt,"ax",%progbits
 474              		.align	1
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 11


 475              		.global	init_interrupt
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv4-sp-d16
 481              	init_interrupt:
 482              	.LFB15:
 125:Src/stm32f4xx_it.c **** void init_interrupt( ){
 483              		.loc 1 125 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 08B5     		push	{r3, lr}
 488              	.LCFI4:
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 3, -8
 491              		.cfi_offset 14, -4
 126:Src/stm32f4xx_it.c **** 	
 127:Src/stm32f4xx_it.c **** 	unsigned int temp_reg;
 128:Src/stm32f4xx_it.c **** //mEXTI_IMR enable 2 interrupt EXTI0 , EXTI1
 129:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(mEXTI_IMR , ~(0x03<< 0));
 492              		.loc 1 129 0
 493 0002 164A     		ldr	r2, .L35
 494 0004 1368     		ldr	r3, [r2]
 495              	.LVL20:
 130:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (0x03<< 0 );
 496              		.loc 1 130 0
 497 0006 43F00303 		orr	r3, r3, #3
 498              	.LVL21:
 131:Src/stm32f4xx_it.c **** 	write_reg(mEXTI_IMR , temp_reg );
 499              		.loc 1 131 0
 500 000a 1360     		str	r3, [r2]
 132:Src/stm32f4xx_it.c **** 	
 133:Src/stm32f4xx_it.c **** 	
 134:Src/stm32f4xx_it.c **** 	/////////////////////////////
 135:Src/stm32f4xx_it.c **** 	//raising for button1 
 136:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(mEXTI_RTSR , ~(1<< 0));
 501              		.loc 1 136 0
 502 000c 0832     		adds	r2, r2, #8
 503 000e 1368     		ldr	r3, [r2]
 504              	.LVL22:
 137:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (1<< 0 );
 138:Src/stm32f4xx_it.c **** 	write_reg(mEXTI_RTSR , temp_reg );
 139:Src/stm32f4xx_it.c **** 	
 140:Src/stm32f4xx_it.c **** 	// raising for button1
 141:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(mEXTI_RTSR , ~(1u<< 1));
 142:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (1u << 1 );
 505              		.loc 1 142 0
 506 0010 43F00303 		orr	r3, r3, #3
 507              	.LVL23:
 143:Src/stm32f4xx_it.c **** 	write_reg(mEXTI_RTSR , temp_reg );
 508              		.loc 1 143 0
 509 0014 1360     		str	r3, [r2]
 144:Src/stm32f4xx_it.c **** 	
 145:Src/stm32f4xx_it.c **** 	/////////////////////////////
 146:Src/stm32f4xx_it.c **** // syscfg
 147:Src/stm32f4xx_it.c **** 	
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 12


 148:Src/stm32f4xx_it.c **** 	//FOR EXTI0
 149:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(mSYSCFG_EXTICR1 , ~(0x0F<< 0));
 510              		.loc 1 149 0
 511 0016 A2F58062 		sub	r2, r2, #1024
 512 001a 1368     		ldr	r3, [r2]
 513              	.LVL24:
 150:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (0 << 0 );
 151:Src/stm32f4xx_it.c **** 	write_reg(mSYSCFG_EXTICR1 , temp_reg );
 152:Src/stm32f4xx_it.c **** 	
 153:Src/stm32f4xx_it.c **** 	//FOR EXTI1
 154:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(mSYSCFG_EXTICR1 , ~(0x0F<< 4));
 514              		.loc 1 154 0
 515 001c 23F0FF03 		bic	r3, r3, #255
 516              	.LVL25:
 155:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (0 << 4 );
 156:Src/stm32f4xx_it.c **** 	write_reg(mSYSCFG_EXTICR1 , temp_reg );
 517              		.loc 1 156 0
 518 0020 1360     		str	r3, [r2]
 157:Src/stm32f4xx_it.c **** 	
 158:Src/stm32f4xx_it.c **** 	//////////////////////////////
 159:Src/stm32f4xx_it.c **** 	
 160:Src/stm32f4xx_it.c **** //NVIC	
 161:Src/stm32f4xx_it.c **** 	mNVIC_SetPriority(EXTI0_IRQn , 15);
 519              		.loc 1 161 0
 520 0022 0F21     		movs	r1, #15
 521 0024 0620     		movs	r0, #6
 522 0026 FFF7FEFF 		bl	mNVIC_SetPriority
 523              	.LVL26:
 162:Src/stm32f4xx_it.c **** 	mNVIC_SetPriority(EXTI1_IRQn , 15);
 524              		.loc 1 162 0
 525 002a 0F21     		movs	r1, #15
 526 002c 0720     		movs	r0, #7
 527 002e FFF7FEFF 		bl	mNVIC_SetPriority
 528              	.LVL27:
 163:Src/stm32f4xx_it.c **** 	
 164:Src/stm32f4xx_it.c **** 	mNVIC_EnableIRQ(EXTI0_IRQn);
 529              		.loc 1 164 0
 530 0032 0620     		movs	r0, #6
 531 0034 FFF7FEFF 		bl	mNVIC_EnableIRQ
 532              	.LVL28:
 165:Src/stm32f4xx_it.c **** 	mNVIC_EnableIRQ(EXTI1_IRQn);
 533              		.loc 1 165 0
 534 0038 0720     		movs	r0, #7
 535 003a FFF7FEFF 		bl	mNVIC_EnableIRQ
 536              	.LVL29:
 166:Src/stm32f4xx_it.c **** 	
 167:Src/stm32f4xx_it.c **** 	//////////////////////////////
 168:Src/stm32f4xx_it.c **** 	/* usart1 */
 169:Src/stm32f4xx_it.c **** 
 170:Src/stm32f4xx_it.c ****     /* Tx interrupt */
 171:Src/stm32f4xx_it.c ****     temp_reg = read_reg(mUSART_CR1, ~(1 << 6));
 537              		.loc 1 171 0
 538 003e 084A     		ldr	r2, .L35+4
 539 0040 1368     		ldr	r3, [r2]
 540              	.LVL30:
 172:Src/stm32f4xx_it.c ****     temp_reg |= (1 << 6);
 173:Src/stm32f4xx_it.c ****     write_reg(mUSART_CR1, temp_reg);
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 13


 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c ****     /* Rx interrupt - RXNEIE */
 176:Src/stm32f4xx_it.c ****     temp_reg = read_reg(mUSART_CR1, ~(1 << 5));
 177:Src/stm32f4xx_it.c ****     temp_reg |= (1 << 5);
 541              		.loc 1 177 0
 542 0042 43F06003 		orr	r3, r3, #96
 543              	.LVL31:
 178:Src/stm32f4xx_it.c ****     write_reg(mUSART_CR1, temp_reg);
 544              		.loc 1 178 0
 545 0046 1360     		str	r3, [r2]
 179:Src/stm32f4xx_it.c ****     
 180:Src/stm32f4xx_it.c **** 	mNVIC_SetPriority(USART1_IRQn , 10);
 546              		.loc 1 180 0
 547 0048 0A21     		movs	r1, #10
 548 004a 2520     		movs	r0, #37
 549 004c FFF7FEFF 		bl	mNVIC_SetPriority
 550              	.LVL32:
 181:Src/stm32f4xx_it.c **** 	mNVIC_EnableIRQ(USART1_IRQn);
 551              		.loc 1 181 0
 552 0050 2520     		movs	r0, #37
 553 0052 FFF7FEFF 		bl	mNVIC_EnableIRQ
 554              	.LVL33:
 182:Src/stm32f4xx_it.c **** 
 183:Src/stm32f4xx_it.c ****     asm("cpsie i") ;	
 555              		.loc 1 183 0
 556              		.syntax unified
 557              	@ 183 "Src/stm32f4xx_it.c" 1
 558 0056 62B6     		cpsie i
 559              	@ 0 "" 2
 184:Src/stm32f4xx_it.c **** 	
 185:Src/stm32f4xx_it.c **** }
 560              		.loc 1 185 0
 561              		.thumb
 562              		.syntax unified
 563 0058 08BD     		pop	{r3, pc}
 564              	.L36:
 565 005a 00BF     		.align	2
 566              	.L35:
 567 005c 003C0140 		.word	1073822720
 568 0060 0C100140 		.word	1073811468
 569              		.cfi_endproc
 570              	.LFE15:
 572              		.global	rx_data
 573              		.global	led_state
 574              		.section	.bss.led_state,"aw",%nobits
 575              		.align	2
 578              	led_state:
 579 0000 00000000 		.space	4
 580              		.section	.bss.rx_data,"aw",%nobits
 581              		.set	.LANCHOR0,. + 0
 584              	rx_data:
 585 0000 00       		.space	1
 586              		.text
 587              	.Letext0:
 588              		.file 2 "E:/Users/VuHaiLong/Documents/stm/mylib/mInc/mtype.h"
 589              		.file 3 "Inc/stm32f4xx_it.h"
 590              		.file 4 "E:/Users/VuHaiLong/Documents/stm/mylib/mInc/gpio.h"
ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 14


ARM GAS  E:\msys32\tmp\ccQJRnlQ.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
E:\msys32\tmp\ccQJRnlQ.s:18     .text.TIM2_IRQHandler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:25     .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
E:\msys32\tmp\ccQJRnlQ.s:78     .text.TIM2_IRQHandler:0000003c $d
E:\msys32\tmp\ccQJRnlQ.s:85     .text.EXTI1_IRQHandler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:92     .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
E:\msys32\tmp\ccQJRnlQ.s:105    .text.EXTI0_IRQHandler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:112    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
E:\msys32\tmp\ccQJRnlQ.s:141    .text.EXTI0_IRQHandler:0000001c $d
E:\msys32\tmp\ccQJRnlQ.s:148    .text.USART1_IRQHandler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:155    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
E:\msys32\tmp\ccQJRnlQ.s:205    .text.USART1_IRQHandler:00000034 $d
E:\msys32\tmp\ccQJRnlQ.s:212    .text.NMI_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:219    .text.NMI_Handler:00000000 NMI_Handler
E:\msys32\tmp\ccQJRnlQ.s:232    .text.HardFault_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:239    .text.HardFault_Handler:00000000 HardFault_Handler
E:\msys32\tmp\ccQJRnlQ.s:253    .text.MemManage_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:260    .text.MemManage_Handler:00000000 MemManage_Handler
E:\msys32\tmp\ccQJRnlQ.s:274    .text.BusFault_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:281    .text.BusFault_Handler:00000000 BusFault_Handler
E:\msys32\tmp\ccQJRnlQ.s:295    .text.UsageFault_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:302    .text.UsageFault_Handler:00000000 UsageFault_Handler
E:\msys32\tmp\ccQJRnlQ.s:316    .text.SVC_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:323    .text.SVC_Handler:00000000 SVC_Handler
E:\msys32\tmp\ccQJRnlQ.s:336    .text.DebugMon_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:343    .text.DebugMon_Handler:00000000 DebugMon_Handler
E:\msys32\tmp\ccQJRnlQ.s:356    .text.PendSV_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:363    .text.PendSV_Handler:00000000 PendSV_Handler
E:\msys32\tmp\ccQJRnlQ.s:376    .text.SysTick_Handler:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:383    .text.SysTick_Handler:00000000 SysTick_Handler
E:\msys32\tmp\ccQJRnlQ.s:396    .text.mNVIC_SetPriority:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:403    .text.mNVIC_SetPriority:00000000 mNVIC_SetPriority
E:\msys32\tmp\ccQJRnlQ.s:435    .text.mNVIC_EnableIRQ:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:442    .text.mNVIC_EnableIRQ:00000000 mNVIC_EnableIRQ
E:\msys32\tmp\ccQJRnlQ.s:474    .text.init_interrupt:00000000 $t
E:\msys32\tmp\ccQJRnlQ.s:481    .text.init_interrupt:00000000 init_interrupt
E:\msys32\tmp\ccQJRnlQ.s:567    .text.init_interrupt:0000005c $d
E:\msys32\tmp\ccQJRnlQ.s:584    .bss.rx_data:00000000 rx_data
E:\msys32\tmp\ccQJRnlQ.s:578    .bss.led_state:00000000 led_state
E:\msys32\tmp\ccQJRnlQ.s:575    .bss.led_state:00000000 $d
E:\msys32\tmp\ccQJRnlQ.s:585    .bss.rx_data:00000000 $d

UNDEFINED SYMBOLS
GPIO_TongglePin
