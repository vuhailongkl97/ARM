ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  18              		.align	1
  19              		.global	EXTI1_IRQHandler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	EXTI1_IRQHandler:
  26              	.LFB0:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** 
   2:Src/stm32f4xx_it.c **** #include "project.h"
   3:Src/stm32f4xx_it.c **** 
   4:Src/stm32f4xx_it.c **** extern int times;
   5:Src/stm32f4xx_it.c **** volatile unsigned int led_state = 0;
   6:Src/stm32f4xx_it.c **** volatile unsigned char rx_data = 0;
   7:Src/stm32f4xx_it.c **** 
   8:Src/stm32f4xx_it.c **** void EXTI1_IRQHandler(){
  28              		.loc 1 8 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
   9:Src/stm32f4xx_it.c **** 	unsigned int temp_reg;
  10:Src/stm32f4xx_it.c **** 	delay(0xfff);
  37              		.loc 1 10 0
  38 0002 40F6FF70 		movw	r0, #4095
  39 0006 FFF7FEFF 		bl	delay
  40              	.LVL0:
  11:Src/stm32f4xx_it.c **** 	// xoa co ngat 
  12:Src/stm32f4xx_it.c **** 	temp_reg = (1 <<1) ;
  13:Src/stm32f4xx_it.c **** 	write_reg(EXTI_PR , temp_reg );
  41              		.loc 1 13 0
  42 000a 034B     		ldr	r3, .L3
  43 000c 0222     		movs	r2, #2
  44 000e 1A60     		str	r2, [r3]
  14:Src/stm32f4xx_it.c **** 	write_reg(NVIC_ICPR , (1 << 7) );
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 2


  45              		.loc 1 14 0
  46 0010 024B     		ldr	r3, .L3+4
  47 0012 8022     		movs	r2, #128
  48 0014 1A60     		str	r2, [r3]
  15:Src/stm32f4xx_it.c **** }
  49              		.loc 1 15 0
  50 0016 08BD     		pop	{r3, pc}
  51              	.L4:
  52              		.align	2
  53              	.L3:
  54 0018 143C0140 		.word	1073822740
  55 001c 80E200E0 		.word	-536812928
  56              		.cfi_endproc
  57              	.LFE0:
  59              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
  60              		.align	1
  61              		.global	EXTI0_IRQHandler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	EXTI0_IRQHandler:
  68              	.LFB1:
  16:Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(){
  69              		.loc 1 16 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 08B5     		push	{r3, lr}
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 3, -8
  77              		.cfi_offset 14, -4
  17:Src/stm32f4xx_it.c **** 	unsigned int temp_reg;
  18:Src/stm32f4xx_it.c **** 	
  19:Src/stm32f4xx_it.c **** 	times = !times;
  78              		.loc 1 19 0
  79 0002 0B4A     		ldr	r2, .L10
  80 0004 1368     		ldr	r3, [r2]
  81 0006 B3FA83F3 		clz	r3, r3
  82 000a 5B09     		lsrs	r3, r3, #5
  83 000c 1360     		str	r3, [r2]
  20:Src/stm32f4xx_it.c **** 	if(times)
  84              		.loc 1 20 0
  85 000e 53B9     		cbnz	r3, .L9
  21:Src/stm32f4xx_it.c **** 		led_on(GPIOD_BSRR,15);
  22:Src/stm32f4xx_it.c **** 	else 
  23:Src/stm32f4xx_it.c **** 		led_off(GPIOD_BSRR,15);
  86              		.loc 1 23 0
  87 0010 0F21     		movs	r1, #15
  88 0012 0848     		ldr	r0, .L10+4
  89 0014 FFF7FEFF 		bl	led_off
  90              	.LVL1:
  91              	.L7:
  24:Src/stm32f4xx_it.c **** 
  25:Src/stm32f4xx_it.c **** 	// xoa co ngat 
  26:Src/stm32f4xx_it.c **** 	temp_reg = (1 <<0) ;
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 3


  27:Src/stm32f4xx_it.c **** 	write_reg(EXTI_PR , temp_reg );
  92              		.loc 1 27 0
  93 0018 074B     		ldr	r3, .L10+8
  94 001a 0122     		movs	r2, #1
  95 001c 1A60     		str	r2, [r3]
  28:Src/stm32f4xx_it.c **** 	write_reg(NVIC_ICPR , (1 << 6) );
  96              		.loc 1 28 0
  97 001e 074B     		ldr	r3, .L10+12
  98 0020 4022     		movs	r2, #64
  99 0022 1A60     		str	r2, [r3]
  29:Src/stm32f4xx_it.c **** 	
  30:Src/stm32f4xx_it.c **** }
 100              		.loc 1 30 0
 101 0024 08BD     		pop	{r3, pc}
 102              	.LVL2:
 103              	.L9:
  21:Src/stm32f4xx_it.c **** 	else 
 104              		.loc 1 21 0
 105 0026 0F21     		movs	r1, #15
 106 0028 0248     		ldr	r0, .L10+4
 107 002a FFF7FEFF 		bl	led_on
 108              	.LVL3:
 109 002e F3E7     		b	.L7
 110              	.L11:
 111              		.align	2
 112              	.L10:
 113 0030 00000000 		.word	times
 114 0034 180C0240 		.word	1073875992
 115 0038 143C0140 		.word	1073822740
 116 003c 80E200E0 		.word	-536812928
 117              		.cfi_endproc
 118              	.LFE1:
 120              		.section	.text.init_interrupt,"ax",%progbits
 121              		.align	1
 122              		.global	init_interrupt
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv4-sp-d16
 128              	init_interrupt:
 129              	.LFB2:
  31:Src/stm32f4xx_it.c **** 
  32:Src/stm32f4xx_it.c **** void init_interrupt( ){
 130              		.loc 1 32 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
  33:Src/stm32f4xx_it.c **** 	unsigned int temp_reg;
  34:Src/stm32f4xx_it.c **** //EXTI_IMR enable 2 interrupt EXTI0 , EXTI1
  35:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(EXTI_IMR , ~(0x03<< 0));
 135              		.loc 1 35 0
 136 0000 1A4A     		ldr	r2, .L13
 137 0002 1368     		ldr	r3, [r2]
 138              	.LVL4:
  36:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (0x03<< 0 );
 139              		.loc 1 36 0
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 4


 140 0004 43F00303 		orr	r3, r3, #3
 141              	.LVL5:
  37:Src/stm32f4xx_it.c **** 	write_reg(EXTI_IMR , temp_reg );
 142              		.loc 1 37 0
 143 0008 1360     		str	r3, [r2]
  38:Src/stm32f4xx_it.c **** 	
  39:Src/stm32f4xx_it.c **** 	
  40:Src/stm32f4xx_it.c **** 	/////////////////////////////
  41:Src/stm32f4xx_it.c **** 	//raising for button1 
  42:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(EXTI_RTSR , ~(1<< 0));
 144              		.loc 1 42 0
 145 000a 0832     		adds	r2, r2, #8
 146 000c 1368     		ldr	r3, [r2]
 147              	.LVL6:
  43:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (1<< 0 );
  44:Src/stm32f4xx_it.c **** 	write_reg(EXTI_RTSR , temp_reg );
  45:Src/stm32f4xx_it.c **** 	
  46:Src/stm32f4xx_it.c **** 	// raising for button1
  47:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(EXTI_RTSR , ~(1u<< 1));
  48:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (1u << 1 );
 148              		.loc 1 48 0
 149 000e 43F00303 		orr	r3, r3, #3
 150              	.LVL7:
  49:Src/stm32f4xx_it.c **** 	write_reg(EXTI_RTSR , temp_reg );
 151              		.loc 1 49 0
 152 0012 1360     		str	r3, [r2]
  50:Src/stm32f4xx_it.c **** 	
  51:Src/stm32f4xx_it.c **** 	/////////////////////////////
  52:Src/stm32f4xx_it.c **** // syscfg
  53:Src/stm32f4xx_it.c **** 	
  54:Src/stm32f4xx_it.c **** 	//FOR EXTI0
  55:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(SYSCFG_EXTICR1 , ~(0x0F<< 0));
 153              		.loc 1 55 0
 154 0014 A2F58062 		sub	r2, r2, #1024
 155 0018 1368     		ldr	r3, [r2]
 156              	.LVL8:
  56:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (0 << 0 );
  57:Src/stm32f4xx_it.c **** 	write_reg(SYSCFG_EXTICR1 , temp_reg );
  58:Src/stm32f4xx_it.c **** 	
  59:Src/stm32f4xx_it.c **** 	//FOR EXTI1
  60:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(SYSCFG_EXTICR1 , ~(0x0F<< 4));
 157              		.loc 1 60 0
 158 001a 23F0FF03 		bic	r3, r3, #255
 159              	.LVL9:
  61:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (0 << 4 );
  62:Src/stm32f4xx_it.c **** 	write_reg(SYSCFG_EXTICR1 , temp_reg );
 160              		.loc 1 62 0
 161 001e 1360     		str	r3, [r2]
  63:Src/stm32f4xx_it.c **** 	
  64:Src/stm32f4xx_it.c **** 	//////////////////////////////
  65:Src/stm32f4xx_it.c **** 	
  66:Src/stm32f4xx_it.c **** //NVIC	
  67:Src/stm32f4xx_it.c **** 	//FOR EXTI0
  68:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(NVIC_IPR1 , ~(0xFF << 16));
 162              		.loc 1 68 0
 163 0020 134A     		ldr	r2, .L13+4
 164 0022 1368     		ldr	r3, [r2]
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 5


 165              	.LVL10:
 166 0024 23F47F03 		bic	r3, r3, #16711680
 167              	.LVL11:
  69:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (1u << 22 );
 168              		.loc 1 69 0
 169 0028 43F48003 		orr	r3, r3, #4194304
 170              	.LVL12:
  70:Src/stm32f4xx_it.c **** 	write_reg(NVIC_IPR1 , temp_reg );
  71:Src/stm32f4xx_it.c **** 	
  72:Src/stm32f4xx_it.c **** 	//FOR EXTI0	
  73:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(NVIC_IPR1 , ~(0xFF << 24));
 171              		.loc 1 73 0
 172 002c 23F07F43 		bic	r3, r3, #-16777216
 173              	.LVL13:
  74:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (0x01 << 30 );
 174              		.loc 1 74 0
 175 0030 43F08043 		orr	r3, r3, #1073741824
 176              	.LVL14:
  75:Src/stm32f4xx_it.c **** 	write_reg(NVIC_IPR1 , temp_reg );
 177              		.loc 1 75 0
 178 0034 1360     		str	r3, [r2]
  76:Src/stm32f4xx_it.c **** 	
  77:Src/stm32f4xx_it.c **** 	
  78:Src/stm32f4xx_it.c **** 	//////////////////////////////
  79:Src/stm32f4xx_it.c **** 	// enable nvic
  80:Src/stm32f4xx_it.c **** 	
  81:Src/stm32f4xx_it.c **** 	//EXTI0
  82:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(NVIC_ISER , ~(0x01<< 6));
 179              		.loc 1 82 0
 180 0036 A2F54172 		sub	r2, r2, #772
 181 003a 1368     		ldr	r3, [r2]
 182              	.LVL15:
  83:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (1 << 6 );
  84:Src/stm32f4xx_it.c **** 	write_reg(NVIC_ISER , temp_reg );
  85:Src/stm32f4xx_it.c **** 	
  86:Src/stm32f4xx_it.c **** 	//EXTI1
  87:Src/stm32f4xx_it.c **** 	temp_reg = read_reg(NVIC_ISER , ~(0x01<< 7));
  88:Src/stm32f4xx_it.c **** 	temp_reg  = temp_reg | (1 << 7 );
 183              		.loc 1 88 0
 184 003c 43F0C003 		orr	r3, r3, #192
 185              	.LVL16:
  89:Src/stm32f4xx_it.c **** 	write_reg(NVIC_ISER , temp_reg );
 186              		.loc 1 89 0
 187 0040 1360     		str	r3, [r2]
  90:Src/stm32f4xx_it.c **** 	
  91:Src/stm32f4xx_it.c **** 	//////////////////////////////
  92:Src/stm32f4xx_it.c **** 	/* usart1 */
  93:Src/stm32f4xx_it.c **** 
  94:Src/stm32f4xx_it.c **** 	
  95:Src/stm32f4xx_it.c ****     /* Tx interrupt */
  96:Src/stm32f4xx_it.c ****     temp_reg = read_reg(USART_CR1, ~(1 << 6));
 188              		.loc 1 96 0
 189 0042 0C4A     		ldr	r2, .L13+8
 190 0044 1368     		ldr	r3, [r2]
 191              	.LVL17:
  97:Src/stm32f4xx_it.c ****     temp_reg |= (1 << 6);
  98:Src/stm32f4xx_it.c ****     write_reg(USART_CR1, temp_reg);
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 6


  99:Src/stm32f4xx_it.c **** 
 100:Src/stm32f4xx_it.c ****     /* Rx interrupt - RXNEIE */
 101:Src/stm32f4xx_it.c ****     temp_reg = read_reg(USART_CR1, ~(1 << 5));
 102:Src/stm32f4xx_it.c ****     temp_reg |= (1 << 5);
 192              		.loc 1 102 0
 193 0046 43F06003 		orr	r3, r3, #96
 194              	.LVL18:
 103:Src/stm32f4xx_it.c ****     write_reg(USART_CR1, temp_reg);
 195              		.loc 1 103 0
 196 004a 1360     		str	r3, [r2]
 104:Src/stm32f4xx_it.c ****     
 105:Src/stm32f4xx_it.c ****     // 37  = 32 + 5
 106:Src/stm32f4xx_it.c ****     temp_reg = read_reg(NVIC_ISER1, ~(1 << 5));
 197              		.loc 1 106 0
 198 004c 0A4A     		ldr	r2, .L13+12
 199 004e 1368     		ldr	r3, [r2]
 200              	.LVL19:
 107:Src/stm32f4xx_it.c ****     temp_reg |= 1 << 5;
 201              		.loc 1 107 0
 202 0050 43F02003 		orr	r3, r3, #32
 203              	.LVL20:
 108:Src/stm32f4xx_it.c ****     write_reg(NVIC_ISER1, temp_reg);
 204              		.loc 1 108 0
 205 0054 1360     		str	r3, [r2]
 109:Src/stm32f4xx_it.c **** 
 110:Src/stm32f4xx_it.c ****     temp_reg = read_reg(NVIC_IPR7, ~(0xFF << 8));
 206              		.loc 1 110 0
 207 0056 02F54972 		add	r2, r2, #804
 208 005a 1368     		ldr	r3, [r2]
 209              	.LVL21:
 210 005c 23F47F43 		bic	r3, r3, #65280
 211              	.LVL22:
 111:Src/stm32f4xx_it.c ****     temp_reg |= 0x01 << 14;
 212              		.loc 1 111 0
 213 0060 43F48043 		orr	r3, r3, #16384
 214              	.LVL23:
 112:Src/stm32f4xx_it.c ****     write_reg(NVIC_IPR7, temp_reg);
 215              		.loc 1 112 0
 216 0064 1360     		str	r3, [r2]
 113:Src/stm32f4xx_it.c ****     
 114:Src/stm32f4xx_it.c **** 	
 115:Src/stm32f4xx_it.c **** 	
 116:Src/stm32f4xx_it.c ****     asm("cpsie i") ;	
 217              		.loc 1 116 0
 218              		.syntax unified
 219              	@ 116 "Src/stm32f4xx_it.c" 1
 220 0066 62B6     		cpsie i
 221              	@ 0 "" 2
 117:Src/stm32f4xx_it.c **** 	
 118:Src/stm32f4xx_it.c **** }
 222              		.loc 1 118 0
 223              		.thumb
 224              		.syntax unified
 225 0068 7047     		bx	lr
 226              	.L14:
 227 006a 00BF     		.align	2
 228              	.L13:
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 7


 229 006c 003C0140 		.word	1073822720
 230 0070 04E400E0 		.word	-536812540
 231 0074 0C100140 		.word	1073811468
 232 0078 04E100E0 		.word	-536813308
 233              		.cfi_endproc
 234              	.LFE2:
 236              		.section	.text.USART1_IRQHandler,"ax",%progbits
 237              		.align	1
 238              		.global	USART1_IRQHandler
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	USART1_IRQHandler:
 245              	.LFB3:
 119:Src/stm32f4xx_it.c **** 
 120:Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 121:Src/stm32f4xx_it.c **** {
 246              		.loc 1 121 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 8
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 0000 82B0     		sub	sp, sp, #8
 252              	.LCFI2:
 253              		.cfi_def_cfa_offset 8
 122:Src/stm32f4xx_it.c ****     volatile unsigned int temp;
 123:Src/stm32f4xx_it.c **** 	unsigned long int temp_reg;
 124:Src/stm32f4xx_it.c ****     
 125:Src/stm32f4xx_it.c ****     temp = read_reg(USART_SR, 1 << 6);
 254              		.loc 1 125 0
 255 0002 0C4B     		ldr	r3, .L19
 256 0004 1B68     		ldr	r3, [r3]
 257 0006 03F04003 		and	r3, r3, #64
 258 000a 0193     		str	r3, [sp, #4]
 126:Src/stm32f4xx_it.c ****     if (0 != temp) /* Tx - TC flag */
 259              		.loc 1 126 0
 260 000c 019B     		ldr	r3, [sp, #4]
 261 000e 23B1     		cbz	r3, .L16
 127:Src/stm32f4xx_it.c ****     {
 128:Src/stm32f4xx_it.c **** 		// clear flag tc
 129:Src/stm32f4xx_it.c **** 		temp_reg = read_reg(USART_SR , ~(1u << 6));
 262              		.loc 1 129 0
 263 0010 084A     		ldr	r2, .L19
 264 0012 1368     		ldr	r3, [r2]
 265 0014 23F04003 		bic	r3, r3, #64
 266              	.LVL24:
 130:Src/stm32f4xx_it.c **** 		temp_reg |= (0u << 6);
 131:Src/stm32f4xx_it.c ****         write_reg(USART_SR, temp_reg);
 267              		.loc 1 131 0
 268 0018 1360     		str	r3, [r2]
 269              	.LVL25:
 270              	.L16:
 132:Src/stm32f4xx_it.c **** 		
 133:Src/stm32f4xx_it.c ****     }
 134:Src/stm32f4xx_it.c ****     temp = read_reg(USART_SR, 1 << 5);
 271              		.loc 1 134 0
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 8


 272 001a 064B     		ldr	r3, .L19
 273 001c 1B68     		ldr	r3, [r3]
 274 001e 03F02003 		and	r3, r3, #32
 275 0022 0193     		str	r3, [sp, #4]
 135:Src/stm32f4xx_it.c ****     if (0 != temp)  /* Rx - RXNE flag */
 276              		.loc 1 135 0
 277 0024 019B     		ldr	r3, [sp, #4]
 278 0026 1BB1     		cbz	r3, .L15
 136:Src/stm32f4xx_it.c ****     {
 137:Src/stm32f4xx_it.c ****         rx_data = read_reg(USART_DR , 0x000000FF);
 279              		.loc 1 137 0
 280 0028 034B     		ldr	r3, .L19+4
 281 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 282 002c 034B     		ldr	r3, .L19+8
 283 002e 1A70     		strb	r2, [r3]
 284              	.L15:
 138:Src/stm32f4xx_it.c ****     }
 139:Src/stm32f4xx_it.c **** }
 285              		.loc 1 139 0
 286 0030 02B0     		add	sp, sp, #8
 287              	.LCFI3:
 288              		.cfi_def_cfa_offset 0
 289              		@ sp needed
 290 0032 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0034 00100140 		.word	1073811456
 295 0038 04100140 		.word	1073811460
 296 003c 00000000 		.word	.LANCHOR0
 297              		.cfi_endproc
 298              	.LFE3:
 300              		.section	.text.NMI_Handler,"ax",%progbits
 301              		.align	1
 302              		.global	NMI_Handler
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	NMI_Handler:
 309              	.LFB4:
 140:Src/stm32f4xx_it.c **** void NMI_Handler(void)
 141:Src/stm32f4xx_it.c **** {
 310              		.loc 1 141 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 142:Src/stm32f4xx_it.c **** }
 315              		.loc 1 142 0
 316 0000 7047     		bx	lr
 317              		.cfi_endproc
 318              	.LFE4:
 320              		.section	.text.HardFault_Handler,"ax",%progbits
 321              		.align	1
 322              		.global	HardFault_Handler
 323              		.syntax unified
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 9


 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	HardFault_Handler:
 329              	.LFB5:
 143:Src/stm32f4xx_it.c **** 
 144:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
 145:Src/stm32f4xx_it.c **** {
 330              		.loc 1 145 0
 331              		.cfi_startproc
 332              		@ Volatile: function does not return.
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336              	.L23:
 337 0000 FEE7     		b	.L23
 338              		.cfi_endproc
 339              	.LFE5:
 341              		.section	.text.MemManage_Handler,"ax",%progbits
 342              		.align	1
 343              		.global	MemManage_Handler
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	MemManage_Handler:
 350              	.LFB6:
 146:Src/stm32f4xx_it.c ****   while (1)
 147:Src/stm32f4xx_it.c ****   {
 148:Src/stm32f4xx_it.c ****   }
 149:Src/stm32f4xx_it.c **** }
 150:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 151:Src/stm32f4xx_it.c **** {
 351              		.loc 1 151 0
 352              		.cfi_startproc
 353              		@ Volatile: function does not return.
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357              	.L25:
 358 0000 FEE7     		b	.L25
 359              		.cfi_endproc
 360              	.LFE6:
 362              		.section	.text.BusFault_Handler,"ax",%progbits
 363              		.align	1
 364              		.global	BusFault_Handler
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	BusFault_Handler:
 371              	.LFB7:
 152:Src/stm32f4xx_it.c ****   while (1)
 153:Src/stm32f4xx_it.c ****   {
 154:Src/stm32f4xx_it.c ****   }
 155:Src/stm32f4xx_it.c **** }
 156:Src/stm32f4xx_it.c **** 
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 10


 157:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 158:Src/stm32f4xx_it.c **** {
 372              		.loc 1 158 0
 373              		.cfi_startproc
 374              		@ Volatile: function does not return.
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              	.L27:
 379 0000 FEE7     		b	.L27
 380              		.cfi_endproc
 381              	.LFE7:
 383              		.section	.text.UsageFault_Handler,"ax",%progbits
 384              		.align	1
 385              		.global	UsageFault_Handler
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv4-sp-d16
 391              	UsageFault_Handler:
 392              	.LFB8:
 159:Src/stm32f4xx_it.c ****   while (1)
 160:Src/stm32f4xx_it.c ****   {
 161:Src/stm32f4xx_it.c ****   }
 162:Src/stm32f4xx_it.c **** 
 163:Src/stm32f4xx_it.c **** }
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 166:Src/stm32f4xx_it.c **** {
 393              		.loc 1 166 0
 394              		.cfi_startproc
 395              		@ Volatile: function does not return.
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399              	.L29:
 400 0000 FEE7     		b	.L29
 401              		.cfi_endproc
 402              	.LFE8:
 404              		.section	.text.SVC_Handler,"ax",%progbits
 405              		.align	1
 406              		.global	SVC_Handler
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu fpv4-sp-d16
 412              	SVC_Handler:
 413              	.LFB9:
 167:Src/stm32f4xx_it.c ****   while (1)
 168:Src/stm32f4xx_it.c ****   {
 169:Src/stm32f4xx_it.c ****   }
 170:Src/stm32f4xx_it.c **** }
 171:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 172:Src/stm32f4xx_it.c **** {
 414              		.loc 1 172 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 11


 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 173:Src/stm32f4xx_it.c **** }
 419              		.loc 1 173 0
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE9:
 424              		.section	.text.DebugMon_Handler,"ax",%progbits
 425              		.align	1
 426              		.global	DebugMon_Handler
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu fpv4-sp-d16
 432              	DebugMon_Handler:
 433              	.LFB10:
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 176:Src/stm32f4xx_it.c **** {
 434              		.loc 1 176 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 177:Src/stm32f4xx_it.c **** }
 439              		.loc 1 177 0
 440 0000 7047     		bx	lr
 441              		.cfi_endproc
 442              	.LFE10:
 444              		.section	.text.PendSV_Handler,"ax",%progbits
 445              		.align	1
 446              		.global	PendSV_Handler
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	PendSV_Handler:
 453              	.LFB11:
 178:Src/stm32f4xx_it.c **** 
 179:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 180:Src/stm32f4xx_it.c **** {
 454              		.loc 1 180 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 181:Src/stm32f4xx_it.c **** }
 459              		.loc 1 181 0
 460 0000 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE11:
 464              		.section	.text.SysTick_Handler,"ax",%progbits
 465              		.align	1
 466              		.global	SysTick_Handler
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 12


 470              		.fpu fpv4-sp-d16
 472              	SysTick_Handler:
 473              	.LFB12:
 182:Src/stm32f4xx_it.c **** 
 183:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 184:Src/stm32f4xx_it.c **** {
 474              		.loc 1 184 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 185:Src/stm32f4xx_it.c **** }
 479              		.loc 1 185 0
 480 0000 7047     		bx	lr
 481              		.cfi_endproc
 482              	.LFE12:
 484              		.global	rx_data
 485              		.global	led_state
 486              		.section	.bss.led_state,"aw",%nobits
 487              		.align	2
 490              	led_state:
 491 0000 00000000 		.space	4
 492              		.section	.bss.rx_data,"aw",%nobits
 493              		.set	.LANCHOR0,. + 0
 496              	rx_data:
 497 0000 00       		.space	1
 498              		.text
 499              	.Letext0:
 500              		.file 2 "Inc/stm32f4xx_it.h"
 501              		.file 3 "Inc/gpio.h"
ARM GAS  E:\msys32\tmp\cc1xSzts.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
E:\msys32\tmp\cc1xSzts.s:18     .text.EXTI1_IRQHandler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:25     .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
E:\msys32\tmp\cc1xSzts.s:54     .text.EXTI1_IRQHandler:00000018 $d
E:\msys32\tmp\cc1xSzts.s:60     .text.EXTI0_IRQHandler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:67     .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
E:\msys32\tmp\cc1xSzts.s:113    .text.EXTI0_IRQHandler:00000030 $d
E:\msys32\tmp\cc1xSzts.s:121    .text.init_interrupt:00000000 $t
E:\msys32\tmp\cc1xSzts.s:128    .text.init_interrupt:00000000 init_interrupt
E:\msys32\tmp\cc1xSzts.s:229    .text.init_interrupt:0000006c $d
E:\msys32\tmp\cc1xSzts.s:237    .text.USART1_IRQHandler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:244    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
E:\msys32\tmp\cc1xSzts.s:294    .text.USART1_IRQHandler:00000034 $d
E:\msys32\tmp\cc1xSzts.s:301    .text.NMI_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:308    .text.NMI_Handler:00000000 NMI_Handler
E:\msys32\tmp\cc1xSzts.s:321    .text.HardFault_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:328    .text.HardFault_Handler:00000000 HardFault_Handler
E:\msys32\tmp\cc1xSzts.s:342    .text.MemManage_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:349    .text.MemManage_Handler:00000000 MemManage_Handler
E:\msys32\tmp\cc1xSzts.s:363    .text.BusFault_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:370    .text.BusFault_Handler:00000000 BusFault_Handler
E:\msys32\tmp\cc1xSzts.s:384    .text.UsageFault_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:391    .text.UsageFault_Handler:00000000 UsageFault_Handler
E:\msys32\tmp\cc1xSzts.s:405    .text.SVC_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:412    .text.SVC_Handler:00000000 SVC_Handler
E:\msys32\tmp\cc1xSzts.s:425    .text.DebugMon_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:432    .text.DebugMon_Handler:00000000 DebugMon_Handler
E:\msys32\tmp\cc1xSzts.s:445    .text.PendSV_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:452    .text.PendSV_Handler:00000000 PendSV_Handler
E:\msys32\tmp\cc1xSzts.s:465    .text.SysTick_Handler:00000000 $t
E:\msys32\tmp\cc1xSzts.s:472    .text.SysTick_Handler:00000000 SysTick_Handler
E:\msys32\tmp\cc1xSzts.s:496    .bss.rx_data:00000000 rx_data
E:\msys32\tmp\cc1xSzts.s:490    .bss.led_state:00000000 led_state
E:\msys32\tmp\cc1xSzts.s:487    .bss.led_state:00000000 $d
E:\msys32\tmp\cc1xSzts.s:497    .bss.rx_data:00000000 $d

UNDEFINED SYMBOLS
delay
led_off
led_on
times
